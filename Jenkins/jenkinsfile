pipeline {
    agent any
    tools {
        jdk "JAVA_HOME"
        maven "MAVEN_HOME"
    }
    environment {
        DOCKER_IMAGE_NAME = 'ghassen52/devops_project'
        DOCKER_HUB_USERNAME = 'ghassen52'
        DOCKER_HUB_PASSWORD = 'dckr_pat_97iXDGLkPCUFhZM-MBG52yGRR9E'
        POM_VERSION = sh(script: "mvn help:evaluate -Dexpression=project.version -q -DforceStdout", returnStdout: true).trim()
        MAVEN_REPO_USERNAME = admin
        MAVEN_REPO_PASSWORD = admin
        NEXUS_URL = 'http://localhost:8081/repository/maven-snapshots'
        GROUP_ID = 'tn.esprit'
        ARTIFACT_ID = 'DevOps_Project'
    }
    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/ghassen-oueslati/devops_project'
            }
        }
        stage('Code Compile') {
            steps {
                dir('DevOps_Project') {
                    sh 'mvn clean compile'
                }
            }
        }
        stage('Unit Test') {
            steps {
                dir('DevOps_Project') {
                    sh "mvn test"
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                dir('DevOps_Project') {
                    script {
                        withSonarQubeEnv() {
                            sh "mvn clean verify sonar:sonar -Dsonar.projectKey=Devops_project -Dsonar.projectName='Devops_project'"
                        }
                    }
                }
            }
        }
        stage('Deploy to Maven Repository') {
            steps {
                dir('DevOps_Project') {
                    script {
                        sh 'mvn clean deploy -P nexus-deploy'
                    }
                }
            }
        }
        stage('Build and Push Image') {
            steps {
                script {
                    sh '''
                        cd DevOps_Project
                        docker build --build-arg VERSION=${POM_VERSION} --build-arg NEXUS_URL=${NEXUS_URL} --build-arg GROUP_ID=${GROUP_ID} --build-arg ARTIFACT_ID=${ARTIFACT_ID} -t ${DOCKER_IMAGE_NAME}:${POM_VERSION} .
                        docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}
                        docker push ${DOCKER_IMAGE_NAME}:${POM_VERSION}
                    '''
                }
            }
        }
    }
}
