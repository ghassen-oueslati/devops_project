pipeline {
    agent any
    tools {
        jdk "JAVA_HOME"
        maven "MAVEN_HOME"
    }
    environment {
        DOCKER_IMAGE_NAME = 'ghassen52/devops_project'
        DOCKER_HUB_USERNAME = 'ghassen52'
        DOCKER_HUB_PASSWORD = 'dckr_pat_97iXDGLkPCUFhZM-MBG52yGRR9E'
        POM_VERSION = sh(script: "mvn help:evaluate -Dexpression=project.version -q -DforceStdout", returnStdout: true).trim()
    }
    stages {
        stage('git Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/ghassen-oueslati/devops_project'
            }
        }
        stage('Code Compile') {
            steps {
                dir('DevOps_Project') {
                    sh 'mvn clean compile'
                }
            }
        }
        // stage('Unit Test') {
        //     steps {
        //         dir('DevOps_Project') {
        //             sh "mvn test"
        //         }
        //     }
        // }
        // stage('SonarQube Analysis') {
        //     steps {
        //         dir('DevOps_Project') {
        //             script {
        //                 withSonarQubeEnv() {
        //                     sh "mvn clean verify sonar:sonar -Dsonar.projectKey=Devops_project -Dsonar.projectName='Devops_project'"
        //                 }
        //             }
        //         }
        //     }
        // }
        stage('Deploy to Nexus Snapshots Repository') {
            when {
                expression {
                    return env.POM_VERSION.contains("SNAPSHOT")
                }
            }
            steps {
                script {
                    sh '''
                        cd DevOps_Project
                        mvn deploy -DskipTests -DaltDeploymentRepository=nexus::default::http://localhost:8081/repository/maven-snapshots/
                    '''
                }
            }
        }
        stage('Deploy to Nexus Releases Repository') {
            when {
                expression {
                    return env.POM_VERSION.contains("RELEASE")
                }
            }
            steps {
                script {
                    sh '''
                        cd DevOps_Project
                        mvn deploy -DskipTests -DaltDeploymentRepository=nexus::default::http://localhost:8081/repository/maven-releases/
                    '''
                }
            }
        }
        // stage('Build and Push Image') {
        //     steps {
        //         script {
        //             sh '''
        //                 cd DevOps_Project
        //                 docker build -t ${DOCKER_IMAGE_NAME} .
        //                 docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}
        //                 docker push ${DOCKER_IMAGE_NAME}
        //             '''
        //         }
        //     }
        // }
    }
}
